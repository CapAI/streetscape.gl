{"version":3,"sources":["../../../src/traffic-light-layer/traffic-light-layer.js"],"names":["Layer","CubeGeometry","SphereGeometry","Model","PhongMaterial","fp64","fp64LowPart","GL","vs","fs","makeLightShapeTexture","LIGHT_COLOR","invalid","green","yellow","red","LIGHT_SHAPE","circular","left_arrow","right_arrow","defaultProps","getPosition","type","value","x","position","getAngle","getShape","getColor","getState","sizeScale","min","material","shininess","specularColor","TrafficLightLayer","modules","gl","context","modelsByName","_getModels","setState","models","box","lights","attributeManager","getAttributeManager","addInstanced","instancePositions","size","accessor","instancePositions64xyLow","update","calculateInstancePositions64xyLow","instanceAngles","instanceShapes","UNSIGNED_BYTE","calculateInstanceShapes","instanceColors","calculateInstanceColors","instanceStates","uniforms","props","state","setUniforms","Object","assign","modelScale","draw","shaders","getShaders","id","shaderCache","geometry","isInstanced","modelTranslate","useInstanceColor","lightShapeTexture","changedAttributes","getModels","model","setInstanceCount","data","length","setAttributes","attribute","isFP64","use64bitPositions","constant","Float32Array","i","point","color","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer} from '@deck.gl/core';\nimport {CubeGeometry, SphereGeometry, Model, PhongMaterial, fp64} from '@luma.gl/core';\nconst {fp64LowPart} = fp64;\nimport GL from '@luma.gl/constants';\n\nimport vs from './traffic-light-layer-vertex.glsl';\nimport fs from './traffic-light-layer-fragment.glsl';\n\nimport {makeLightShapeTexture} from './traffic-light-utils';\n\nconst LIGHT_COLOR = {\n  invalid: [0, 0, 0],\n  green: [0, 255, 128],\n  yellow: [255, 250, 0],\n  red: [255, 16, 16]\n};\n\n/* eslint-disable camelcase */\nconst LIGHT_SHAPE = {\n  circular: 0,\n  left_arrow: 1,\n  right_arrow: 2\n};\n/* eslint-enable camelcase */\n\nconst defaultProps = {\n  getPosition: {type: 'accessor', value: x => x.position},\n  getAngle: {type: 'accessor', value: 0},\n  getShape: {type: 'accessor', value: x => 'circular'},\n  getColor: {type: 'accessor', value: x => 'green'},\n  getState: {type: 'accessor', value: 1},\n\n  sizeScale: {type: 'number', value: 0.15, min: 0},\n\n  fp64: false,\n  material: new PhongMaterial({\n    shininess: 0,\n    specularColor: [0, 0, 0]\n  })\n};\n\nexport default class TrafficLightLayer extends Layer {\n  getShaders() {\n    return {vs, fs, modules: ['project32', 'gouraud-lighting', 'picking']};\n  }\n\n  initializeState() {\n    const {gl} = this.context;\n    const modelsByName = this._getModels(gl);\n    this.setState({\n      models: [modelsByName.box, modelsByName.lights],\n      modelsByName\n    });\n\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        accessor: 'getPosition'\n      },\n      instancePositions64xyLow: {\n        size: 2,\n        accessor: 'getPosition',\n        update: this.calculateInstancePositions64xyLow\n      },\n      instanceAngles: {size: 1, accessor: 'getAngle'},\n      instanceShapes: {\n        size: 1,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getShape',\n        update: this.calculateInstanceShapes\n      },\n      instanceColors: {\n        size: 3,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getColor',\n        update: this.calculateInstanceColors\n      },\n      instanceStates: {\n        size: 1,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getState'\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  draw({uniforms}) {\n    const {sizeScale} = this.props;\n    const {modelsByName} = this.state;\n\n    modelsByName.box\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          modelScale: [sizeScale * 0.8, sizeScale * 1.6, sizeScale * 1.6]\n        })\n      )\n      .draw();\n    modelsByName.lights\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          modelScale: [sizeScale, sizeScale, sizeScale]\n        })\n      )\n      .draw();\n  }\n\n  _getModels(gl) {\n    const shaders = this.getShaders();\n\n    const box = new Model(gl, {\n      id: `${this.props.id}-box`,\n      ...shaders,\n      shaderCache: this.context.shaderCache,\n      geometry: new CubeGeometry(),\n      isInstanced: true,\n      uniforms: {\n        modelTranslate: [0, 0, 0],\n        useInstanceColor: false\n      }\n    });\n\n    const lights = new Model(gl, {\n      id: `${this.props.id}-light`,\n      ...shaders,\n      shaderCache: this.context.shaderCache,\n      geometry: new SphereGeometry(),\n      isInstanced: true,\n      uniforms: {\n        lightShapeTexture: makeLightShapeTexture(gl),\n        modelTranslate: [-0.4, 0, 0],\n        useInstanceColor: true\n      }\n    });\n\n    return {box, lights};\n  }\n\n  updateAttributes(changedAttributes) {\n    super.updateAttributes(changedAttributes);\n\n    for (const model of this.getModels()) {\n      model.setInstanceCount(this.props.data.length);\n      model.setAttributes(changedAttributes);\n    }\n  }\n\n  calculateInstancePositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(2);\n      return;\n    }\n\n    const {data, getPosition} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const point of data) {\n      const position = getPosition(point);\n      value[i++] = fp64LowPart(position[0]);\n      value[i++] = fp64LowPart(position[1]);\n    }\n  }\n\n  calculateInstanceColors(attribute) {\n    const {data, getColor} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const point of data) {\n      const color = LIGHT_COLOR[getColor(point)] || LIGHT_COLOR.invalid;\n      value[i++] = color[0];\n      value[i++] = color[1];\n      value[i++] = color[2];\n    }\n  }\n\n  calculateInstanceShapes(attribute) {\n    const {data, getShape} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const point of data) {\n      value[i++] = LIGHT_SHAPE[getShape(point)] || 0;\n    }\n  }\n}\n\nTrafficLightLayer.layerName = 'TrafficLightLayer';\nTrafficLightLayer.defaultProps = defaultProps;\n"],"file":"traffic-light-layer.js"}